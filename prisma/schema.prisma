// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Newsletter {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  subscribed DateTime @default(now())
}

model Categories {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String          @unique
  description   String?
  slug          String          @unique
  subCategories SubCategories[]
  product       Product[]
}

model SubCategories {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String     @unique
  description  String?
  slug         String     @unique
  categoryName String
  products     Product[]
  category     Categories @relation(fields: [categoryName], references: [name], onDelete: Cascade)
}

model Product {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String?
  slug            String        @unique
  price           Float
  quantity        Int
  rating          Float
  images          String[]
  subCategoryName String
  categoryName    String
  subCategories   SubCategories @relation(fields: [subCategoryName], references: [name], onDelete: Cascade)
  categories      Categories    @relation(fields: [categoryName], references: [name], onDelete: Cascade)
  cartItems       CartItem[]
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  cartId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  cart      Cart     @relation(fields: [cartId], references: [id])

  @@unique([productId, cartId])
}
